{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "\u7c21\u55ae", "subTitle": "\u4e8e\u4ee3\u7801\u4e2d\u627e\u5bfb\u7c21\u55ae\u4e4b\u7f8e", "avatarUrl": "https://cdn.37o.cc/logo.jpg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/RC4-jia-mi-jie-mi-suan-fa.html", "labels": ["documentation"], "postTitle": "RC4\u52a0\u5bc6\u89e3\u5bc6\u7b97\u6cd5", "postUrl": "post/RC4-jia-mi-jie-mi-suan-fa.html", "postSourceUrl": "https://github.com/huxubo/huxubo.github.io/issues/1", "commentNum": 0, "wordCount": 1868, "description": "RC4\uff1aRivest Cipher 4 \u7684\u7f29\u5199\uff0c\u662f\u4e00\u79cd\u6d41\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5bc6\u94a5\u957f\u5ea6\u53ef\u53d8\uff0c\u5b83\u52a0\u89e3\u5bc6\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u3002", "top": 0, "createdAt": 1718882344, "style": "", "script": "", "ogImage": "https://cdn.37o.cc/logo.jpg", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/PHP-zhi-RSA-jia-mi-jie-mi.html", "labels": ["documentation"], "postTitle": "PHP\u4e4bRSA\u52a0\u5bc6\u89e3\u5bc6", "postUrl": "post/PHP-zhi-RSA-jia-mi-jie-mi.html", "postSourceUrl": "https://github.com/huxubo/huxubo.github.io/issues/2", "commentNum": 0, "wordCount": 4193, "description": "RSA\u7b97\u6cd5\u5c5e\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5,\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u9700\u8981\u4e24\u4e2a\u79d8\u94a5:\u516c\u5f00\u5bc6\u94a5(publickey)\u548c\u79c1\u6709\u79d8\u94a5(privatekey).\u516c\u5f00\u5bc6\u94a5\u548c\u79c1\u6709\u79d8\u94a5\u662f\u4e00\u5bf9,\u5982\u679c\u516c\u5f00\u5bc6\u94a5\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6,\u53ea\u6709\u7528\u5bf9\u5e94\u7684\u79c1\u6709\u79d8\u94a5\u624d\u80fd\u89e3\u5bc6;\u5982\u679c\u79c1\u6709\u79d8\u94a5\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u90a3\u4e48\u53ea\u6709\u7528\u5bf9\u5e94\u7684\u516c\u5f00\u5bc6\u94a5\u624d\u80fd\u89e3\u5bc6.\u56e0\u4e3a\u52a0\u5bc6\u89e3\u5bc6\u4f7f\u7528\u7684\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u79d8\u94a5,\u6240\u4ee5\u8fd9\u79cd\u7b97\u6cd5\u53eb\u505a\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5.\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u516c\u94a5\u52a0\u5bc6\u79c1\u94a5\u89e3\u5bc6,\u79c1\u94a5\u52a0\u5bc6\u516c\u94a5\u89e3\u5bc6\r\n```php\r\n<?php\r\n\r\nnamespace util;\r\n\r\n\r\n/**\r\n * rsa\u52a0\u5bc6\u7c7b\r\n * Class Rsa\r\n */\r\nclass RsaUtil\r\n{\r\n\r\n    const CHAR_SET = 'UTF-8';\r\n    const BASE_64_FORMAT = 'UrlSafeNoPadding';\r\n    const RSA_ALGORITHM_KEY_TYPE = OPENSSL_KEYTYPE_RSA;\r\n    const RSA_ALGORITHM_SIGN = OPENSSL_ALGO_SHA256;\r\n\r\n    protected $public_key;\r\n    protected $private_key;\r\n    protected $key_len;\r\n\r\n    public function __construct($pub_key = '', $pri_key = null)\r\n    {\r\n        if ($pub_key) {\r\n            $this->public_key = $pub_key;\r\n            $pub_id = openssl_pkey_get_public($this->public_key);\r\n            $this->key_len = openssl_pkey_get_details($pub_id)['bits'];\r\n        }\r\n        if ($pri_key) {\r\n            $this->private_key = $pri_key;\r\n            $pri_id = openssl_pkey_get_private($this->private_key);\r\n            $this->key_len = openssl_pkey_get_details($pri_id)['bits'];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * \u521b\u5efa\u5bc6\u94a5\u5bf9\r\n     */\r\n    public static function createKeys($key_size = 1024)\r\n    {\r\n        $config = array(\r\n            'private_key_bits' => $key_size,\r\n            'private_key_type' => self::RSA_ALGORITHM_KEY_TYPE,\r\n        );\r\n        $res = openssl_pkey_new($config);\r\n        openssl_pkey_export($res, $private_key);\r\n        $public_key_detail = openssl_pkey_get_details($res);\r\n        $public_key = $public_key_detail['key'];\r\n\r\n        return array(\r\n            'public_key' => $public_key,\r\n            'private_key' => $private_key,\r\n        );\r\n    }\r\n\r\n    /*\r\n     * \u516c\u94a5\u52a0\u5bc6\r\n     */\r\n    public function publicEncrypt($data)\r\n    {\r\n        $encrypted = '';\r\n        $part_len = $this->key_len / 8 - 11;\r\n        $parts = str_split($data, $part_len);\r\n\r\n        foreach ($parts as $part) {\r\n            $encrypted_temp = '';\r\n            openssl_public_encrypt($part, $encrypted_temp, $this->public_key);\r\n            $encrypted .= $encrypted_temp;\r\n        }\r\n\r\n        return base64_encode($encrypted);\r\n    }\r\n\r\n    /*\r\n     * \u79c1\u94a5\u89e3\u5bc6\r\n     */\r\n    public function privateDecrypt($encrypted)\r\n    {\r\n        $decrypted = '';\r\n        $part_len = $this->key_len / 8; \r\n        //url  \u4e2d\u7684get\u4f20\u503c\u9ed8\u8ba4\u4f1a\u5427+\u53f7\u8fc7\u6ee4\u6210' '\uff0c\u66ff\u6362\u56de\u6765\u5c31\u597d\u4e86\r\n        str_replace('% ', '+', $encrypted); \r\n        echo $encrypted;\r\n        $base64_decoded = base64_decode($encrypted);\r\n        $parts = str_split($base64_decoded, $part_len);\r\n        foreach ($parts as $part) {\r\n            $decrypted_temp = '';\r\n            openssl_private_decrypt($part, $decrypted_temp, $this->private_key);\r\n            $decrypted .= $decrypted_temp;\r\n        }\r\n        return $decrypted;\r\n    }\r\n\r\n    /*\r\n     * \u79c1\u94a5\u52a0\u5bc6\r\n     */\r\n    public function privateEncrypt($data)\r\n    {\r\n        $encrypted = '';\r\n        $part_len = $this->key_len / 8 - 11;\r\n        $parts = str_split($data, $part_len);\r\n\r\n        foreach ($parts as $part) {\r\n            $encrypted_temp = '';\r\n            openssl_private_encrypt($part, $encrypted_temp, $this->private_key);\r\n            $encrypted .= $encrypted_temp;\r\n        }\r\n        return base64_encode($encrypted);\r\n    }\r\n\r\n    /*\r\n     * \u516c\u94a5\u89e3\u5bc6\r\n     */\r\n    public function publicDecrypt($encrypted)\r\n    {\r\n        $decrypted = '';\r\n        $part_len = $this->key_len / 8;\r\n        $base64_decoded = base64_decode($encrypted);\r\n        $parts = str_split($base64_decoded, $part_len);\r\n\r\n        foreach ($parts as $part) {\r\n            $decrypted_temp = '';\r\n            openssl_public_decrypt($part, $decrypted_temp, $this->public_key);\r\n            $decrypted .= $decrypted_temp;\r\n        }\r\n        return $decrypted;\r\n    }\r\n\r\n    /*\r\n     * \u6570\u636e\u52a0\u7b7e\r\n     */\r\n    public function sign($data)\r\n    {\r\n        openssl_sign($data, $sign, $this->private_key, self::RSA_ALGORITHM_SIGN);\r\n        return base64_encode($sign);\r\n    }\r\n\r\n    /*\r\n     * \u6570\u636e\u7b7e\u540d\u9a8c\u8bc1\r\n     */\r\n    public function verify($data, $sign)\r\n    {\r\n        $pub_id = openssl_get_publickey($this->public_key);\r\n        $res = openssl_verify($data, base64_decode($sign), $pub_id, self::RSA_ALGORITHM_SIGN);\r\n        return $res;\r\n    }\r\n\r\n}\r\n\u3002", "top": 0, "createdAt": 1718934266, "style": "", "script": "", "ogImage": "https://cdn.37o.cc/logo.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "\u7c21\u55ae", "faviconUrl": "https://cdn.37o.cc/logo.jpg", "ogImage": "https://cdn.37o.cc/logo.jpg", "homeUrl": "https://huxubo.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}